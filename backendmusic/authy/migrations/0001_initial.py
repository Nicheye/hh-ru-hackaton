# Generated by Django 4.2.6 on 2023-12-16 08:56

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=700)),
                ('image', models.ImageField(blank=True, default='../media/avatars/123.png', upload_to='media/avatars')),
                ('tags', models.CharField(blank=True, choices=[('BACKEND', 'BACKEND'), ('UI/UX', 'UI'), ('Product manager', 'Product '), ('Project manager', 'Project '), ('Frontend', 'Frontend'), ('Fullstack', 'Fullstack'), ('Analyst', 'Analyst')], default='Fullstack', max_length=30)),
                ('date', models.DateField(default=None)),
                ('count', models.PositiveIntegerField(default=0)),
                ('is_finished', models.BooleanField(default=False)),
                ('event_type', models.CharField(choices=[('Hackaton', 'Hackaton'), ('Meetup', 'Meetup')], default='Hackaton', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, default='../media/avatars/123.png', upload_to='media/avatars')),
                ('bio', models.CharField(blank=True, max_length=1000)),
                ('role', models.CharField(choices=[('BACKEND', 'BACKEND'), ('UI/UX', 'UI'), ('Product manager', 'Product manager'), ('Project manager', 'Project manager'), ('Frontend', 'Frontend'), ('Fullstack', 'Fullstack'), ('Analyst', 'Analyst')], default='Analyst', max_length=16)),
                ('sex', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMELE')], default='FEMALE', max_length=16)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('second', models.CharField(blank=True, max_length=100)),
                ('father', models.CharField(blank=True, max_length=100)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='', max_length=128, region=None)),
                ('bday', models.DateField(blank=True, default='2000-01-05')),
                ('is_proved', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('city', models.CharField(default='Moskva', max_length=50)),
                ('tg', models.CharField(default='@bot', max_length=32)),
                ('email', models.EmailField(default='', max_length=254)),
                ('events_count', models.PositiveIntegerField(default=0)),
                ('prizes_count', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.PositiveIntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authy.event')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
